{"numFailedTestSuites":1,"numFailedTests":2,"numPassedTestSuites":0,"numPassedTests":2,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":1,"numTotalTests":4,"openHandles":[],"snapshot":{"added":0,"didUpdate":false,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0},"startTime":1651768206833,"success":false,"testResults":[{"assertionResults":[{"ancestorTitles":["API routes"],"failureMessages":[],"fullName":"API routes 1. feladat","location":null,"status":"passed","title":"1. feladat"},{"ancestorTitles":["API routes"],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\nExpected: 200\nReceived: undefined\n    at Object.<anonymous> (H:\\School\\Softverfejlesztes\\projektfeladat\\index.test.js:11:33)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)"],"fullName":"API routes 2. feladat","location":null,"status":"failed","title":"2. feladat"},{"ancestorTitles":["API routes"],"failureMessages":["Error: Request failed with status code 500\n    at createError (H:\\School\\Softverfejlesztes\\projektfeladat\\node_modules\\axios\\lib\\core\\createError.js:16:15)\n    at settle (H:\\School\\Softverfejlesztes\\projektfeladat\\node_modules\\axios\\lib\\core\\settle.js:17:12)\n    at IncomingMessage.handleStreamEnd (H:\\School\\Softverfejlesztes\\projektfeladat\\node_modules\\axios\\lib\\adapters\\http.js:322:11)\n    at IncomingMessage.emit (node:events:402:35)\n    at endReadableNT (node:internal/streams/readable:1343:12)\n    at processTicksAndRejections (node:internal/process/task_queues:83:21)"],"fullName":"API routes 3. feladat","location":null,"status":"failed","title":"3. feladat"},{"ancestorTitles":["API routes"],"failureMessages":[],"fullName":"API routes 4. feladat","location":null,"status":"passed","title":"4. feladat"}],"endTime":1651768207219,"message":"  ● API routes › 2. feladat\n\n    expect(received).toEqual(expected) // deep equality\n\n    Expected: 200\n    Received: undefined\n\n       9 |     test(\"2. feladat\", async () => {\n      10 |         const response = await postReq(\"http://localhost:5000/adat\");\n    > 11 |         expect(response.status).toEqual(200);\n         |                                 ^\n      12 |         expect(response.data).toEqual({ fName: \"Till\", lName: \"Lindemann\" });\n      13 |     });\n      14 |     test(\"3. feladat\", async () => {\n\n      at Object.<anonymous> (index.test.js:11:33)\n\n  ● API routes › 3. feladat\n\n    Request failed with status code 500\n\n      at createError (node_modules/axios/lib/core/createError.js:16:15)\n      at settle (node_modules/axios/lib/core/settle.js:17:12)\n      at IncomingMessage.handleStreamEnd (node_modules/axios/lib/adapters/http.js:322:11)\n","name":"H:\\School\\Softverfejlesztes\\projektfeladat\\index.test.js","startTime":1651768206873,"status":"failed","summary":""}],"wasInterrupted":false}